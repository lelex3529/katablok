generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Block {
  id                String          @id @default(uuid())
  title             String
  content           String
  categories        String[]
  estimatedDuration Int?
  unitPrice         Float?
  isPublic          Boolean         @default(true)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  ProposalBlocks    ProposalBlock[]
}

model Proposal {
  id         String            @id @default(uuid())
  title      String
  clientName String
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  status     String            @default("draft")
  metadata   Json? // Added metadata field to store payment terms and other flexible data
  sections   ProposalSection[]
}

model ProposalSection {
  id         String          @id @default(uuid())
  title      String
  order      Int
  proposalId String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  blocks     ProposalBlock[]
  proposal   Proposal        @relation(fields: [proposalId], references: [id], onDelete: Cascade)

  @@index([proposalId])
}

model ProposalBlock {
  id                String          @id @default(uuid())
  order             Int
  blockId           String
  sectionId         String
  overrideTitle     String?
  overrideContent   String?
  overrideUnitPrice Float?
  overrideDuration  Int?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  block             Block           @relation(fields: [blockId], references: [id])
  section           ProposalSection @relation(fields: [sectionId], references: [id], onDelete: Cascade)

  @@index([blockId])
  @@index([sectionId])
}
